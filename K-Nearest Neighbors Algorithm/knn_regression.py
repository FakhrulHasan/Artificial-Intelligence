# -*- coding: utf-8 -*-
"""KNN_Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1r1B4wtdLxNFAouYg7Q0wpI427CDVuTvb
"""

from google.colab import drive
drive.mount('/content/gdrive')

from numpy import genfromtxt

data_path = 'diabetes.csv'
my_data = genfromtxt(data_path, delimiter=',')

data = my_data.tolist()
for i in range(5):
  print(data[i])
type(data)

import random
train_set=[]
validation_set=[]
test_set=[]
random.shuffle(data)

#Split data set
for S in data:
  R=random.uniform(0,1)
  if R>=0 and R<=0.7 and len(train_set)/len(data)<=0.7 :
    train_set.append(s)
  elif R>0.7 and R<=0.85 and len(validation_set)/len(data)<=0.15 :
    validation_set.append(s)
  elif R>0.85 and R<=1 and len(test_set)/len(data) <= 0.15:
    test_set.append(s)

print(len(train_set)/len(data))
print(len(validation_set)/len(data))
print(len(test_set)/len(data))

# Validation Check
import math
K=10
Error=0
for V in validation_set:
  l=[]
  for T in train_set:
    dist=math.sqrt((V[0]-T[0])**2+(V[1]-T[1])**2+(V[2]-T[2])**2+(V[3]-T[3])**2+(V[4]-T[4])**2+(V[4]-T[4])**2+(V[5]-T[5])**2+(V[6]-T[6])**2+(V[7]-T[7])**2+(V[8]-T[8])**2+(V[9]-T[9])**2)
    l.append([dist,T])
  l.sort()
  l=l[:K]
  
  majority_class=[]
  for i in range(K):
    majority_class.append(l[i][1][-1])
  
  avg=sum(majority_class)/len(majority_class)
  Error+=(V[-1]-avg)**2
  

Mean_Squared_Error=Error/len(validation_set)
    
print(Mean_Squared_Error)

#Test case Check
k=10
Error=0
for V in test_set:
  l=[]
  for T in train_set:
    dist=math.sqrt((V[0]-T[0])**2+(V[1]-T[1])**2+(V[2]-T[2])**2+(V[3]-T[3])**2+(V[4]-T[4])**2+(V[4]-T[4])**2+(V[5]-T[5])**2+(V[6]-T[6])**2+(V[7]-T[7])**2+(V[8]-T[8])**2+(V[9]-T[9])**2)
    l.append([dist,t])
  l.sort()
  l=l[:k]
  
  majority_class=[]
  for i in range(k):

    majority_class.append(l[i][1][-1])

  avg=sum(majority_class)/len(majority_class)
  Error+=(V[-1]-avg)**2
  

Mean_Squared_Error=Error/len(test_set)
    
print(Mean_Squared_Error)